<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation">

    <Style x:Key="MenuBorderStyle" TargetType="Border">
        <Setter Property="BorderBrush" Value="{DynamicResource ShellBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="1 0 1 0" />
    </Style>
    
    <Style TargetType="{x:Type telerik:RadMenu}">
        <Setter Property="Background" Value="{DynamicResource MenuBackgroundBrush}" />
    </Style>

    <Style TargetType="{x:Type telerik:RadMenuItem}">
        <Setter Property="Background" Value="{DynamicResource MenuBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource NormalForegroundBrush}" />
        <Setter Property="Padding" Value="16, 4" />
        <Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:RadMenuItem}">
					<Grid x:Name="RootElement">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="SubMenuOpen">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Background" Storyboard.TargetName="HighlightVisual">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="{DynamicResource MenuItemSelectedBackgroundColor}" />
                                                </DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="HighlightVisual">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="{DynamicResource NormalBorderColor}" />
                                                </DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="HighlightInnerBorderVisual">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="{DynamicResource NormalBorderColor}" />
                                                </DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightVisual"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Highlighted">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightVisual"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentGrid"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="Focused"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckedStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Tick">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Icon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked"/>
								<VisualState x:Name="HideIcon">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Icon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="RoleStates">
								<VisualState x:Name="TopLevelItem">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="IconHost">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>-2,0,-7,0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="TopLevelHeader">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="IconHost">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>-2,0,-7,0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SubmenuItem"/>
								<VisualState x:Name="SubmenuHeader">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ExpandIcon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Separator"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="OrientationStates">
								<VisualState x:Name="Horizontal"/>
								<VisualState x:Name="Vertical"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ChildrenStates">
								<VisualState x:Name="HasChildren"/>
								<VisualState x:Name="NoChildren"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="HeaderStates">
								<VisualState x:Name="VisibleHeader"/>
								<VisualState x:Name="EmptyHeader">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="Icon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>5,3,4,3</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Content">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="InputGestureTextStates">
								<VisualState x:Name="EmptyInputGestureText"/>
								<VisualState x:Name="VisibleInputGestureText">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_InputGestureText">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
						<Grid x:Name="ContentGrid" Margin="2">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
                            <Border x:Name="HighlightVisual" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="0" Grid.ColumnSpan="4" CornerRadius="0" Opacity="0">
                                <Border.Background>
                                    <SolidColorBrush Color="{DynamicResource MenuItemSelectedBackgroundColor}" />
                                </Border.Background>
                                <Border x:Name="HighlightInnerBorderVisual" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="0" CornerRadius="0"/>
							</Border>
							<Grid Grid.Column="0" x:Name="IconHost" Margin="-2,0,-1,0" Width="{TemplateBinding IconColumnWidth}">
								<Path x:Name="Tick" Data="M4,7.1L5.7,7.2 7.4,9.1 12,2.4 13.2,2 7.3,13.8z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Height="16" Margin="5,3,6,3" Visibility="Collapsed" Width="16"/>
								<ContentPresenter x:Name="Icon" ContentTemplate="{TemplateBinding IconTemplate}" Content="{TemplateBinding Icon}" Margin="5,3,6,3"/>
							</Grid>
							<ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							<telerik:SharedSizeContentPresenter x:Name="PART_InputGestureText" Content="{TemplateBinding InputGestureText}" Grid.Column="2" Margin="40,3,3,3" SharedSizeGroupWidth="IGTColumn" Visibility="Collapsed"/>
							<telerik:SharedSizeContentPresenter Grid.Column="3" HorizontalAlignment="Right" SharedSizeGroupWidth="ExpandIconColumn">
								<Grid x:Name="ExpandIcon" Height="19" Margin="0,0,2,0" Visibility="Collapsed" Width="16">
                                    <Path Data="M0,0L0,7 1,7 1,6 2,6 2,5 3,5 3,4 4,4 4,3 3,3 3,2 2,2 2,1 1,1 1,0z" Fill="{DynamicResource NormalForegroundBrush}" Margin="6,7,6,5"/>
                                    <Path Data="M0,0L0,7 1,7 1,6 2,6 2,5 3,5 3,4 4,4 4,3 3,3 3,2 2,2 2,1 1,1 1,0z" Fill="{DynamicResource NormalForegroundBrush}" Margin="6"/>
								</Grid>
							</telerik:SharedSizeContentPresenter>
						</Grid>
						<Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="-1" IsOpen="{TemplateBinding IsSubmenuOpen}" VerticalOffset="-1">
							<Grid Height="{TemplateBinding DropDownHeight}" Width="{TemplateBinding DropDownWidth}">
								<Grid x:Name="PopupContentElement">
                                    <Border BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="1" Background="{DynamicResource MenuBackgroundBrush}">
										<Grid>
                                            <Border x:Name="IconSeparatorBackground" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="0,0,1,0" Background="{DynamicResource MenuBackgroundBrush}" HorizontalAlignment="Left" Width="{Binding IconColumnWidth, RelativeSource={RelativeSource TemplatedParent}}"/>
											<ScrollViewer x:Name="PART_ScrollViewer" telerik:SharedSizeScope.IsSharedSizeScope="True">
												<ScrollViewer.Style>
													<Style TargetType="{x:Type ScrollViewer}">
														<Setter Property="Padding" Value="0"/>
														<Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
														<Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
														<Setter Property="CanContentScroll" Value="True"/>
														<Setter Property="Template">
															<Setter.Value>
																<ControlTemplate TargetType="{x:Type ScrollViewer}">
																	<Grid SnapsToDevicePixels="True">
																		<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="{TemplateBinding Padding}"/>
																		<RepeatButton CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="ScrollBar.LineUpCommand" Focusable="False" VerticalAlignment="Top">
																			<RepeatButton.Style>
																				<Style TargetType="{x:Type RepeatButton}">
																					<Setter Property="BorderThickness" Value="0,0,0,1"/>
																					<Setter Property="Template">
																						<Setter.Value>
																							<ControlTemplate TargetType="{x:Type RepeatButton}">
																								<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
																									<VisualStateManager.VisualStateGroups>
																										<VisualStateGroup x:Name="CommonStates">
																											<VisualState x:Name="Normal"/>
																											<VisualState x:Name="Pressed">
																												<Storyboard>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="{DynamicResource NormalForegroundColor}"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="{DynamicResource MenuBackgroundColor}"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentContainer">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<Thickness>1,3,1,1</Thickness>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																												</Storyboard>
																											</VisualState>
																											<VisualState x:Name="Disabled">
																												<Storyboard>
																													<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentContainer"/>
																												</Storyboard>
																											</VisualState>
																										</VisualStateGroup>
																										<VisualStateGroup x:Name="FocusStates">
																											<VisualState x:Name="Focused"/>
																											<VisualState x:Name="Unfocused"/>
																										</VisualStateGroup>
																									</VisualStateManager.VisualStateGroups>
																									<Grid x:Name="ContentContainer" Margin="1,2">
																										<Path x:Name="BackgroundIcon" Data="M0,4L3.5,0.5 7,4z" Fill="{DynamicResource MenuBackgroundBrush}" Height="4" Margin="0,2,0,0" Stretch="None" Width="7"/>
																										<Path x:Name="ForegroundIcon" Data="M0,4L3.5,0.5 7,4z" Fill="{DynamicResource NormalBackgroundBrush}" Height="4" Margin="0,1" Stretch="None" Width="7"/>
																									</Grid>
																								</Border>
																							</ControlTemplate>
																						</Setter.Value>
																					</Setter>
																					<Style.BasedOn>
																						<Style TargetType="{x:Type RepeatButton}">
																							<Setter Property="Interval" Value="50"/>
																							<Setter Property="IsTabStop" Value="False"/>
																							<Setter Property="MinWidth" Value="0"/>
																							<Setter Property="MinHeight" Value="0"/>
                                                                                            <Setter Property="Background" Value="{DynamicResource MenuBackgroundBrush}"/>
                                                                                            <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
																							<Setter Property="BorderThickness" Value="0"/>
																							<Setter Property="ClickMode" Value="Hover"/>
																						</Style>
																					</Style.BasedOn>
																				</Style>
																			</RepeatButton.Style>
																			<RepeatButton.Visibility>
																				<MultiBinding ConverterParameter="0" FallbackValue="Visibility.Collapsed" UpdateSourceTrigger="Default">
																					<MultiBinding.Converter>
																						<MenuScrollingVisibilityConverter/>
																					</MultiBinding.Converter>
																					<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																				</MultiBinding>
																			</RepeatButton.Visibility>
																		</RepeatButton>
																		<RepeatButton CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="ScrollBar.LineDownCommand" Focusable="False" VerticalAlignment="Bottom">
																			<RepeatButton.Style>
																				<Style TargetType="{x:Type RepeatButton}">
																					<Setter Property="BorderThickness" Value="0,1,0,0"/>
																					<Setter Property="Template">
																						<Setter.Value>
																							<ControlTemplate TargetType="{x:Type RepeatButton}">
																								<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
																									<VisualStateManager.VisualStateGroups>
																										<VisualStateGroup x:Name="CommonStates">
																											<VisualState x:Name="Normal"/>
																											<VisualState x:Name="Pressed">
																												<Storyboard>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="{DynamicResource NormalForegroundColor}"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="{DynamicResource MenuBackgroundColor}"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentContainer">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<Thickness>1,3,1,1</Thickness>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																												</Storyboard>
																											</VisualState>
																											<VisualState x:Name="Disabled">
																												<Storyboard>
																													<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentContainer"/>
																												</Storyboard>
																											</VisualState>
																										</VisualStateGroup>
																										<VisualStateGroup x:Name="FocusStates">
																											<VisualState x:Name="Focused"/>
																											<VisualState x:Name="Unfocused"/>
																										</VisualStateGroup>
																									</VisualStateManager.VisualStateGroups>
																									<Grid x:Name="ContentContainer" Margin="1,2">
																										<Path x:Name="BackgroundIcon" Data="M0,0L3.5,3.5 7,0z" Fill="{DynamicResource MenuBackgroundBrush}" Height="4" Margin="0,2,0,0" Stretch="None" Width="7"/>
																										<Path x:Name="ForegroundIcon" Data="M0,0L3.5,3.5 7,0z" Fill="{DynamicResource NormalBackgroundBrush}" Height="4" Margin="0,1" Stretch="None" Width="7"/>
																									</Grid>
																								</Border>
																							</ControlTemplate>
																						</Setter.Value>
																					</Setter>
																					<Style.BasedOn>
																						<Style TargetType="{x:Type RepeatButton}">
																							<Setter Property="Interval" Value="50"/>
																							<Setter Property="IsTabStop" Value="False"/>
																							<Setter Property="MinWidth" Value="0"/>
																							<Setter Property="MinHeight" Value="0"/>
                                                                                            <Setter Property="Background" Value="{DynamicResource MenuBackgroundBrush}"/>
                                                                                            <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
																							<Setter Property="BorderThickness" Value="0"/>
																							<Setter Property="ClickMode" Value="Hover"/>
																						</Style>
																					</Style.BasedOn>
																				</Style>
																			</RepeatButton.Style>
																			<RepeatButton.Visibility>
																				<MultiBinding ConverterParameter="100" FallbackValue="Visibility.Collapsed" UpdateSourceTrigger="Default">
																					<MultiBinding.Converter>
																						<MenuScrollingVisibilityConverter/>
																					</MultiBinding.Converter>
																					<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																				</MultiBinding>
																			</RepeatButton.Visibility>
																		</RepeatButton>
																	</Grid>
																</ControlTemplate>
															</Setter.Value>
														</Setter>
													</Style>
												</ScrollViewer.Style>
												<Grid>
													<ItemsPresenter/>
												</Grid>
											</ScrollViewer>
										</Grid>
									</Border>
								</Grid>
							</Grid>
						</Popup>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="TopLevelHeaderTemplateKey">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:RadMenuItem}">
					<Grid x:Name="RootElement">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="SubMenuOpen">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Background" Storyboard.TargetName="HighlightVisual">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="{DynamicResource MenuItemSelectedBackgroundColor}" />
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="HighlightVisual">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="{DynamicResource NormalBorderColor}" />
                                                </DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="HighlightInnerBorderVisual">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="{DynamicResource NormalBorderColor}" />
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightVisual"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Highlighted">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightVisual"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentGrid"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="Focused"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckedStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Tick">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Icon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked"/>
								<VisualState x:Name="HideIcon">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Icon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="RoleStates">
								<VisualState x:Name="TopLevelItem">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="IconHost">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>-2,0,-7,0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="TopLevelHeader">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="IconHost">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>-2,0,-7,0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SubmenuItem"/>
								<VisualState x:Name="SubmenuHeader">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ExpandIcon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Separator"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="OrientationStates">
								<VisualState x:Name="Horizontal"/>
								<VisualState x:Name="Vertical"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ChildrenStates">
								<VisualState x:Name="HasChildren"/>
								<VisualState x:Name="NoChildren"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="HeaderStates">
								<VisualState x:Name="VisibleHeader"/>
								<VisualState x:Name="EmptyHeader">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="Icon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>5,3,4,3</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Content">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="InputGestureTextStates">
								<VisualState x:Name="EmptyInputGestureText"/>
								<VisualState x:Name="VisibleInputGestureText">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_InputGestureText">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
						<Grid x:Name="ContentGrid" Margin="2">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
                            <Border x:Name="HighlightVisual" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="0" Grid.ColumnSpan="4" CornerRadius="0" Opacity="0">
								<Border.Background>
                                    <SolidColorBrush Color="{DynamicResource MenuItemSelectedBackgroundColor}" />
								</Border.Background>
                                <Border x:Name="HighlightInnerBorderVisual" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="0" CornerRadius="0"/>
							</Border>
							<Grid Grid.Column="0" x:Name="IconHost" Margin="-2,0,-1,0" Width="{TemplateBinding IconColumnWidth}">
								<Path x:Name="Tick" Data="M4,7.1L5.7,7.2 7.4,9.1 12,2.4 13.2,2 7.3,13.8z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Height="16" Margin="5,3,6,3" Visibility="Collapsed" Width="16"/>
								<ContentPresenter x:Name="Icon" ContentTemplate="{TemplateBinding IconTemplate}" Content="{TemplateBinding Icon}" Margin="5,3,6,3"/>
							</Grid>
							<ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							<telerik:SharedSizeContentPresenter x:Name="PART_InputGestureText" Content="{TemplateBinding InputGestureText}" Grid.Column="2" Margin="40,3,3,3" SharedSizeGroupWidth="IGTColumn" Visibility="Collapsed"/>
							<telerik:SharedSizeContentPresenter Grid.Column="3" HorizontalAlignment="Right" SharedSizeGroupWidth="ExpandIconColumn">
								<Grid x:Name="ExpandIcon" Height="19" Margin="0,0,2,0" Visibility="Collapsed" Width="16">
                                    <Path Data="M0,0L0,7 1,7 1,6 2,6 2,5 3,5 3,4 4,4 4,3 3,3 3,2 2,2 2,1 1,1 1,0z" Fill="{DynamicResource NormalForegroundBrush}" Margin="6,7,6,5"/>
                                    <Path Data="M0,0L0,7 1,7 1,6 2,6 2,5 3,5 3,4 4,4 4,3 3,3 3,2 2,2 2,1 1,1 1,0z" Fill="{DynamicResource NormalForegroundBrush}" Margin="6"/>
								</Grid>
							</telerik:SharedSizeContentPresenter>
						</Grid>
						<Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="-1" IsOpen="{TemplateBinding IsSubmenuOpen}" VerticalOffset="-1">
							<Grid Height="{TemplateBinding DropDownHeight}" Width="{TemplateBinding DropDownWidth}">
								<Grid x:Name="PopupContentElement">
                                    <Border BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="1" Background="{DynamicResource MenuBackgroundBrush}">
										<Grid>
                                            <Border x:Name="IconSeparatorBackground" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="0,0,1,0" Background="{DynamicResource MenuBackgroundBrush}" HorizontalAlignment="Left" Width="{Binding IconColumnWidth, RelativeSource={RelativeSource TemplatedParent}}"/>
											<ScrollViewer x:Name="PART_ScrollViewer" telerik:SharedSizeScope.IsSharedSizeScope="True">
												<ScrollViewer.Style>
													<Style TargetType="{x:Type ScrollViewer}">
														<Setter Property="Padding" Value="0"/>
														<Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
														<Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
														<Setter Property="CanContentScroll" Value="True"/>
														<Setter Property="Template">
															<Setter.Value>
																<ControlTemplate TargetType="{x:Type ScrollViewer}">
																	<Grid SnapsToDevicePixels="True">
																		<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="{TemplateBinding Padding}"/>
																		<RepeatButton CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="ScrollBar.LineUpCommand" Focusable="False" VerticalAlignment="Top">
																			<RepeatButton.Style>
																				<Style TargetType="{x:Type RepeatButton}">
																					<Setter Property="BorderThickness" Value="0,0,0,1"/>
																					<Setter Property="Template">
																						<Setter.Value>
																							<ControlTemplate TargetType="{x:Type RepeatButton}">
																								<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
																									<VisualStateManager.VisualStateGroups>
																										<VisualStateGroup x:Name="CommonStates">
																											<VisualState x:Name="Normal"/>
																											<VisualState x:Name="Pressed">
																												<Storyboard>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="{DynamicResource NormalForegroundColor}"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="{DynamicResource MenuBackgroundColor}"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentContainer">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<Thickness>1,3,1,1</Thickness>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																												</Storyboard>
																											</VisualState>
																											<VisualState x:Name="Disabled">
																												<Storyboard>
																													<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentContainer"/>
																												</Storyboard>
																											</VisualState>
																										</VisualStateGroup>
																										<VisualStateGroup x:Name="FocusStates">
																											<VisualState x:Name="Focused"/>
																											<VisualState x:Name="Unfocused"/>
																										</VisualStateGroup>
																									</VisualStateManager.VisualStateGroups>
																									<Grid x:Name="ContentContainer" Margin="1,2">
																										<Path x:Name="BackgroundIcon" Data="M0,4L3.5,0.5 7,4z" Fill="{DynamicResource MenuBackgroundBrush}" Height="4" Margin="0,2,0,0" Stretch="None" Width="7"/>
																										<Path x:Name="ForegroundIcon" Data="M0,4L3.5,0.5 7,4z" Fill="{DynamicResource NormalBackgroundBrush}" Height="4" Margin="0,1" Stretch="None" Width="7"/>
																									</Grid>
																								</Border>
																							</ControlTemplate>
																						</Setter.Value>
																					</Setter>
																					<Style.BasedOn>
																						<Style TargetType="{x:Type RepeatButton}">
																							<Setter Property="Interval" Value="50"/>
																							<Setter Property="IsTabStop" Value="False"/>
																							<Setter Property="MinWidth" Value="0"/>
																							<Setter Property="MinHeight" Value="0"/>
																							<Setter Property="Background" Value="{DynamicResource MenuBackgroundBrush}"/>
                                                                                            <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
																							<Setter Property="BorderThickness" Value="0"/>
																							<Setter Property="ClickMode" Value="Hover"/>
																						</Style>
																					</Style.BasedOn>
																				</Style>
																			</RepeatButton.Style>
																			<RepeatButton.Visibility>
																				<MultiBinding ConverterParameter="0" FallbackValue="Visibility.Collapsed" UpdateSourceTrigger="Default">
																					<MultiBinding.Converter>
																						<MenuScrollingVisibilityConverter/>
																					</MultiBinding.Converter>
																					<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																				</MultiBinding>
																			</RepeatButton.Visibility>
																		</RepeatButton>
																		<RepeatButton CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="ScrollBar.LineDownCommand" Focusable="False" VerticalAlignment="Bottom">
																			<RepeatButton.Style>
																				<Style TargetType="{x:Type RepeatButton}">
																					<Setter Property="BorderThickness" Value="0,1,0,0"/>
																					<Setter Property="Template">
																						<Setter.Value>
																							<ControlTemplate TargetType="{x:Type RepeatButton}">
																								<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
																									<VisualStateManager.VisualStateGroups>
																										<VisualStateGroup x:Name="CommonStates">
																											<VisualState x:Name="Normal"/>
																											<VisualState x:Name="Pressed">
																												<Storyboard>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="{DynamicResource NormalForegroundColor}"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="{DynamicResource MenuBackgroundColor}"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentContainer">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<Thickness>1,3,1,1</Thickness>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																												</Storyboard>
																											</VisualState>
																											<VisualState x:Name="Disabled">
																												<Storyboard>
																													<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentContainer"/>
																												</Storyboard>
																											</VisualState>
																										</VisualStateGroup>
																										<VisualStateGroup x:Name="FocusStates">
																											<VisualState x:Name="Focused"/>
																											<VisualState x:Name="Unfocused"/>
																										</VisualStateGroup>
																									</VisualStateManager.VisualStateGroups>
																									<Grid x:Name="ContentContainer" Margin="1,2">
																										<Path x:Name="BackgroundIcon" Data="M0,0L3.5,3.5 7,0z" Fill="{DynamicResource MenuBackgroundBrush}" Height="4" Margin="0,2,0,0" Stretch="None" Width="7"/>
																										<Path x:Name="ForegroundIcon" Data="M0,0L3.5,3.5 7,0z" Fill="{DynamicResource NormalBackgroundBrush}" Height="4" Margin="0,1" Stretch="None" Width="7"/>
																									</Grid>
																								</Border>
																							</ControlTemplate>
																						</Setter.Value>
																					</Setter>
																					<Style.BasedOn>
																						<Style TargetType="{x:Type RepeatButton}">
																							<Setter Property="Interval" Value="50"/>
																							<Setter Property="IsTabStop" Value="False"/>
																							<Setter Property="MinWidth" Value="0"/>
																							<Setter Property="MinHeight" Value="0"/>
																							<Setter Property="Background" Value="{DynamicResource MenuBackgroundBrush}"/>
                                                                                            <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
																							<Setter Property="BorderThickness" Value="0"/>
																							<Setter Property="ClickMode" Value="Hover"/>
																						</Style>
																					</Style.BasedOn>
																				</Style>
																			</RepeatButton.Style>
																			<RepeatButton.Visibility>
																				<MultiBinding ConverterParameter="100" FallbackValue="Visibility.Collapsed" UpdateSourceTrigger="Default">
																					<MultiBinding.Converter>
																						<MenuScrollingVisibilityConverter/>
																					</MultiBinding.Converter>
																					<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																				</MultiBinding>
																			</RepeatButton.Visibility>
																		</RepeatButton>
																	</Grid>
																</ControlTemplate>
															</Setter.Value>
														</Setter>
													</Style>
												</ScrollViewer.Style>
												<Grid>
													<ItemsPresenter/>
												</Grid>
											</ScrollViewer>
										</Grid>
									</Border>
								</Grid>
							</Grid>
						</Popup>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter> 
		<Setter Property="TopLevelItemTemplateKey">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:RadMenuItem}">
					<Grid x:Name="RootElement">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="SubMenuOpen">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Background" Storyboard.TargetName="HighlightVisual">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="{DynamicResource MenuItemSelectedBackgroundColor}" />
                                                </DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="HighlightVisual">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="{DynamicResource NormalBorderColor}" />
                                                </DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="HighlightInnerBorderVisual">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="{DynamicResource NormalBorderColor}" />
                                                </DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightVisual"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Highlighted">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightVisual"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentGrid"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="Focused"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckedStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Tick">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Icon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked"/>
								<VisualState x:Name="HideIcon">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Icon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="RoleStates">
								<VisualState x:Name="TopLevelItem">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="IconHost">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>-2,0,-7,0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="TopLevelHeader">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="IconHost">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>-2,0,-7,0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SubmenuItem"/>
								<VisualState x:Name="SubmenuHeader">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ExpandIcon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Separator"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="OrientationStates">
								<VisualState x:Name="Horizontal"/>
								<VisualState x:Name="Vertical"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ChildrenStates">
								<VisualState x:Name="HasChildren"/>
								<VisualState x:Name="NoChildren"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="HeaderStates">
								<VisualState x:Name="VisibleHeader"/>
								<VisualState x:Name="EmptyHeader">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="Icon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>5,3,4,3</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Content">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="InputGestureTextStates">
								<VisualState x:Name="EmptyInputGestureText"/>
								<VisualState x:Name="VisibleInputGestureText">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_InputGestureText">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
						<Grid x:Name="ContentGrid" Margin="2">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
                            <Border x:Name="HighlightVisual" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="0" Grid.ColumnSpan="4" CornerRadius="0" Opacity="0">
								<Border.Background>
                                    <SolidColorBrush Color="{DynamicResource MenuItemSelectedBackgroundColor}" />
								</Border.Background>
                                <Border x:Name="HighlightInnerBorderVisual" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="0" CornerRadius="0"/>
							</Border>
							<Grid Grid.Column="0" x:Name="IconHost" Margin="-2,0,-1,0" Width="{TemplateBinding IconColumnWidth}">
								<Path x:Name="Tick" Data="M4,7.1L5.7,7.2 7.4,9.1 12,2.4 13.2,2 7.3,13.8z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Height="16" Margin="5,3,6,3" Visibility="Collapsed" Width="16"/>
								<ContentPresenter x:Name="Icon" ContentTemplate="{TemplateBinding IconTemplate}" Content="{TemplateBinding Icon}" Margin="5,3,6,3"/>
							</Grid>
							<ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							<telerik:SharedSizeContentPresenter x:Name="PART_InputGestureText" Content="{TemplateBinding InputGestureText}" Grid.Column="2" Margin="40,3,3,3" SharedSizeGroupWidth="IGTColumn" Visibility="Collapsed"/>
							<telerik:SharedSizeContentPresenter Grid.Column="3" HorizontalAlignment="Right" SharedSizeGroupWidth="ExpandIconColumn">
								<Grid x:Name="ExpandIcon" Height="19" Margin="0,0,2,0" Visibility="Collapsed" Width="16">
                                    <Path Data="M0,0L0,7 1,7 1,6 2,6 2,5 3,5 3,4 4,4 4,3 3,3 3,2 2,2 2,1 1,1 1,0z" Fill="{DynamicResource NormalForegroundBrush}" Margin="6,7,6,5"/>
                                    <Path Data="M0,0L0,7 1,7 1,6 2,6 2,5 3,5 3,4 4,4 4,3 3,3 3,2 2,2 2,1 1,1 1,0z" Fill="{DynamicResource NormalForegroundBrush}" Margin="6"/>
								</Grid>
							</telerik:SharedSizeContentPresenter>
						</Grid>
						<Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="-1" IsOpen="{TemplateBinding IsSubmenuOpen}" VerticalOffset="-1">
							<Grid Height="{TemplateBinding DropDownHeight}" Width="{TemplateBinding DropDownWidth}">
								<Grid x:Name="PopupContentElement">
                                    <Border BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="1" Background="{DynamicResource MenuBackgroundBrush}">
										<Grid>
                                            <Border x:Name="IconSeparatorBackground" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="0,0,1,0" Background="{DynamicResource MenuBackgroundBrush}" HorizontalAlignment="Left" Width="{Binding IconColumnWidth, RelativeSource={RelativeSource TemplatedParent}}"/>
											<ScrollViewer x:Name="PART_ScrollViewer" telerik:SharedSizeScope.IsSharedSizeScope="True">
												<ScrollViewer.Style>
													<Style TargetType="{x:Type ScrollViewer}">
														<Setter Property="Padding" Value="0"/>
														<Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
														<Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
														<Setter Property="CanContentScroll" Value="True"/>
														<Setter Property="Template">
															<Setter.Value>
																<ControlTemplate TargetType="{x:Type ScrollViewer}">
																	<Grid SnapsToDevicePixels="True">
																		<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="{TemplateBinding Padding}"/>
																		<RepeatButton CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="ScrollBar.LineUpCommand" Focusable="False" VerticalAlignment="Top">
																			<RepeatButton.Style>
																				<Style TargetType="{x:Type RepeatButton}">
																					<Setter Property="BorderThickness" Value="0,0,0,1"/>
																					<Setter Property="Template">
																						<Setter.Value>
																							<ControlTemplate TargetType="{x:Type RepeatButton}">
																								<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
																									<VisualStateManager.VisualStateGroups>
																										<VisualStateGroup x:Name="CommonStates">
																											<VisualState x:Name="Normal"/>
																											<VisualState x:Name="Pressed">
																												<Storyboard>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="{DynamicResource NormalForegroundColor}"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="{DynamicResource MenuBackgroundColor}"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentContainer">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<Thickness>1,3,1,1</Thickness>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																												</Storyboard>
																											</VisualState>
																											<VisualState x:Name="Disabled">
																												<Storyboard>
																													<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentContainer"/>
																												</Storyboard>
																											</VisualState>
																										</VisualStateGroup>
																										<VisualStateGroup x:Name="FocusStates">
																											<VisualState x:Name="Focused"/>
																											<VisualState x:Name="Unfocused"/>
																										</VisualStateGroup>
																									</VisualStateManager.VisualStateGroups>
																									<Grid x:Name="ContentContainer" Margin="1,2">
																										<Path x:Name="BackgroundIcon" Data="M0,4L3.5,0.5 7,4z" Fill="{DynamicResource MenuBackgroundBrush}" Height="4" Margin="0,2,0,0" Stretch="None" Width="7"/>
																										<Path x:Name="ForegroundIcon" Data="M0,4L3.5,0.5 7,4z" Fill="{DynamicResource NormalBackgroundBrush}" Height="4" Margin="0,1" Stretch="None" Width="7"/>
																									</Grid>
																								</Border>
																							</ControlTemplate>
																						</Setter.Value>
																					</Setter>
																					<Style.BasedOn>
																						<Style TargetType="{x:Type RepeatButton}">
																							<Setter Property="Interval" Value="50"/>
																							<Setter Property="IsTabStop" Value="False"/>
																							<Setter Property="MinWidth" Value="0"/>
																							<Setter Property="MinHeight" Value="0"/>
                                                                                            <Setter Property="Background" Value="{DynamicResource MenuBackgroundBrush}"/>
                                                                                            <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
																							<Setter Property="BorderThickness" Value="0"/>
																							<Setter Property="ClickMode" Value="Hover"/>
																						</Style>
																					</Style.BasedOn>
																				</Style>
																			</RepeatButton.Style>
																			<RepeatButton.Visibility>
																				<MultiBinding ConverterParameter="0" FallbackValue="Visibility.Collapsed" UpdateSourceTrigger="Default">
																					<MultiBinding.Converter>
																						<MenuScrollingVisibilityConverter/>
																					</MultiBinding.Converter>
																					<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																				</MultiBinding>
																			</RepeatButton.Visibility>
																		</RepeatButton>
																		<RepeatButton CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="ScrollBar.LineDownCommand" Focusable="False" VerticalAlignment="Bottom">
																			<RepeatButton.Style>
																				<Style TargetType="{x:Type RepeatButton}">
																					<Setter Property="BorderThickness" Value="0,1,0,0"/>
																					<Setter Property="Template">
																						<Setter.Value>
																							<ControlTemplate TargetType="{x:Type RepeatButton}">
																								<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
																									<VisualStateManager.VisualStateGroups>
																										<VisualStateGroup x:Name="CommonStates">
																											<VisualState x:Name="Normal"/>
																											<VisualState x:Name="Pressed">
																												<Storyboard>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="{DynamicResource NormalForegroundColor}"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="{DynamicResource MenuBackgroundColor}"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentContainer">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<Thickness>1,3,1,1</Thickness>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																												</Storyboard>
																											</VisualState>
																											<VisualState x:Name="Disabled">
																												<Storyboard>
																													<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentContainer"/>
																												</Storyboard>
																											</VisualState>
																										</VisualStateGroup>
																										<VisualStateGroup x:Name="FocusStates">
																											<VisualState x:Name="Focused"/>
																											<VisualState x:Name="Unfocused"/>
																										</VisualStateGroup>
																									</VisualStateManager.VisualStateGroups>
																									<Grid x:Name="ContentContainer" Margin="1,2">
																										<Path x:Name="BackgroundIcon" Data="M0,0L3.5,3.5 7,0z" Fill="{DynamicResource MenuBackgroundBrush}" Height="4" Margin="0,2,0,0" Stretch="None" Width="7"/>
																										<Path x:Name="ForegroundIcon" Data="M0,0L3.5,3.5 7,0z" Fill="{DynamicResource NormalBackgroundBrush}" Height="4" Margin="0,1" Stretch="None" Width="7"/>
																									</Grid>
																								</Border>
																							</ControlTemplate>
																						</Setter.Value>
																					</Setter>
																					<Style.BasedOn>
																						<Style TargetType="{x:Type RepeatButton}">
																							<Setter Property="Interval" Value="50"/>
																							<Setter Property="IsTabStop" Value="False"/>
																							<Setter Property="MinWidth" Value="0"/>
																							<Setter Property="MinHeight" Value="0"/>
                                                                                            <Setter Property="Background" Value="{DynamicResource MenuBackgroundBrush}"/>
                                                                                            <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
																							<Setter Property="BorderThickness" Value="0"/>
																							<Setter Property="ClickMode" Value="Hover"/>
																						</Style>
																					</Style.BasedOn>
																				</Style>
																			</RepeatButton.Style>
																			<RepeatButton.Visibility>
																				<MultiBinding ConverterParameter="100" FallbackValue="Visibility.Collapsed" UpdateSourceTrigger="Default">
																					<MultiBinding.Converter>
																						<MenuScrollingVisibilityConverter/>
																					</MultiBinding.Converter>
																					<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																				</MultiBinding>
																			</RepeatButton.Visibility>
																		</RepeatButton>
																	</Grid>
																</ControlTemplate>
															</Setter.Value>
														</Setter>
													</Style>
												</ScrollViewer.Style>
												<Grid>
													<ItemsPresenter/>
												</Grid>
											</ScrollViewer>
										</Grid>
									</Border>
								</Grid>
							</Grid>
						</Popup>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="SubmenuHeaderTemplateKey">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:RadMenuItem}">
					<Grid x:Name="RootElement">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="SubMenuOpen">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Background" Storyboard.TargetName="HighlightVisual">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="{DynamicResource MenuItemSelectedBackgroundColor}" />
                                                </DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="HighlightVisual">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="{DynamicResource NormalBorderColor}" />
                                                </DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="HighlightInnerBorderVisual">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="{DynamicResource NormalBorderColor}" />
                                                </DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightVisual"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Highlighted">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightVisual"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentGrid"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="Focused"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckedStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Tick">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Icon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked"/>
								<VisualState x:Name="HideIcon">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Icon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="RoleStates">
								<VisualState x:Name="TopLevelItem">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="IconHost">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>-2,0,-7,0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="TopLevelHeader">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="IconHost">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>-2,0,-7,0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SubmenuItem"/>
								<VisualState x:Name="SubmenuHeader">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ExpandIcon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Separator"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="OrientationStates">
								<VisualState x:Name="Horizontal"/>
								<VisualState x:Name="Vertical"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ChildrenStates">
								<VisualState x:Name="HasChildren"/>
								<VisualState x:Name="NoChildren"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="HeaderStates">
								<VisualState x:Name="VisibleHeader"/>
								<VisualState x:Name="EmptyHeader">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="Icon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>5,3,4,3</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Content">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="InputGestureTextStates">
								<VisualState x:Name="EmptyInputGestureText"/>
								<VisualState x:Name="VisibleInputGestureText">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_InputGestureText">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
						<Grid x:Name="ContentGrid" Margin="2">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
                            <Border x:Name="HighlightVisual" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="0" Grid.ColumnSpan="4" CornerRadius="0" Opacity="0">
                                <Border.Background>
                                    <SolidColorBrush Color="{DynamicResource MenuItemSelectedBackgroundColor}" />
                                </Border.Background>
                                <Border x:Name="HighlightInnerBorderVisual" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="0" CornerRadius="0"/>
							</Border>
							<Grid Grid.Column="0" x:Name="IconHost" Margin="-2,0,-1,0" Width="{TemplateBinding IconColumnWidth}">
								<Path x:Name="Tick" Data="M4,7.1L5.7,7.2 7.4,9.1 12,2.4 13.2,2 7.3,13.8z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Height="16" Margin="5,3,6,3" Visibility="Collapsed" Width="16"/>
								<ContentPresenter x:Name="Icon" ContentTemplate="{TemplateBinding IconTemplate}" Content="{TemplateBinding Icon}" Margin="5,3,6,3"/>
							</Grid>
							<ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							<telerik:SharedSizeContentPresenter x:Name="PART_InputGestureText" Content="{TemplateBinding InputGestureText}" Grid.Column="2" Margin="40,3,3,3" SharedSizeGroupWidth="IGTColumn" Visibility="Collapsed"/>
							<telerik:SharedSizeContentPresenter Grid.Column="3" HorizontalAlignment="Right" SharedSizeGroupWidth="ExpandIconColumn">
								<Grid x:Name="ExpandIcon" Height="19" Margin="0,0,2,0" Visibility="Collapsed" Width="16">
                                    <Path Data="M0,0L0,7 1,7 1,6 2,6 2,5 3,5 3,4 4,4 4,3 3,3 3,2 2,2 2,1 1,1 1,0z" Fill="{DynamicResource NormalForegroundBrush}" Margin="6,7,6,5"/>
                                    <Path Data="M0,0L0,7 1,7 1,6 2,6 2,5 3,5 3,4 4,4 4,3 3,3 3,2 2,2 2,1 1,1 1,0z" Fill="{DynamicResource NormalForegroundBrush}" Margin="6"/>
								</Grid>
							</telerik:SharedSizeContentPresenter>
						</Grid>
						<Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="-1" IsOpen="{TemplateBinding IsSubmenuOpen}" VerticalOffset="-1">
							<Grid Height="{TemplateBinding DropDownHeight}" Width="{TemplateBinding DropDownWidth}">
								<Grid x:Name="PopupContentElement">
                                    <Border BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="1" Background="{DynamicResource MenuBackgroundBrush}">
										<Grid>
                                            <Border x:Name="IconSeparatorBackground" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="0,0,1,0" Background="{DynamicResource MenuBackgroundBrush}" HorizontalAlignment="Left" Width="{Binding IconColumnWidth, RelativeSource={RelativeSource TemplatedParent}}"/>
											<ScrollViewer x:Name="PART_ScrollViewer" telerik:SharedSizeScope.IsSharedSizeScope="True">
												<ScrollViewer.Style>
													<Style TargetType="{x:Type ScrollViewer}">
														<Setter Property="Padding" Value="0"/>
														<Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
														<Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
														<Setter Property="CanContentScroll" Value="True"/>
														<Setter Property="Template">
															<Setter.Value>
																<ControlTemplate TargetType="{x:Type ScrollViewer}">
																	<Grid SnapsToDevicePixels="True">
																		<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="{TemplateBinding Padding}"/>
																		<RepeatButton CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="ScrollBar.LineUpCommand" Focusable="False" VerticalAlignment="Top">
																			<RepeatButton.Style>
																				<Style TargetType="{x:Type RepeatButton}">
																					<Setter Property="BorderThickness" Value="0,0,0,1"/>
																					<Setter Property="Template">
																						<Setter.Value>
																							<ControlTemplate TargetType="{x:Type RepeatButton}">
																								<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
																									<VisualStateManager.VisualStateGroups>
																										<VisualStateGroup x:Name="CommonStates">
																											<VisualState x:Name="Normal"/>
																											<VisualState x:Name="Pressed">
																												<Storyboard>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="{DynamicResource NormalForegroundColor}"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="{DynamicResource MenuBackgroundColor}"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentContainer">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<Thickness>1,3,1,1</Thickness>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																												</Storyboard>
																											</VisualState>
																											<VisualState x:Name="Disabled">
																												<Storyboard>
																													<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentContainer"/>
																												</Storyboard>
																											</VisualState>
																										</VisualStateGroup>
																										<VisualStateGroup x:Name="FocusStates">
																											<VisualState x:Name="Focused"/>
																											<VisualState x:Name="Unfocused"/>
																										</VisualStateGroup>
																									</VisualStateManager.VisualStateGroups>
																									<Grid x:Name="ContentContainer" Margin="1,2">
																										<Path x:Name="BackgroundIcon" Data="M0,4L3.5,0.5 7,4z" Fill="{DynamicResource MenuBackgroundBrush}" Height="4" Margin="0,2,0,0" Stretch="None" Width="7"/>
																										<Path x:Name="ForegroundIcon" Data="M0,4L3.5,0.5 7,4z" Fill="{DynamicResource NormalBackgroundBrush}" Height="4" Margin="0,1" Stretch="None" Width="7"/>
																									</Grid>
																								</Border>
																							</ControlTemplate>
																						</Setter.Value>
																					</Setter>
																					<Style.BasedOn>
																						<Style TargetType="{x:Type RepeatButton}">
																							<Setter Property="Interval" Value="50"/>
																							<Setter Property="IsTabStop" Value="False"/>
																							<Setter Property="MinWidth" Value="0"/>
																							<Setter Property="MinHeight" Value="0"/>
																							<Setter Property="Background" Value="{DynamicResource MenuBackgroundBrush}"/>
                                                                                            <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
																							<Setter Property="BorderThickness" Value="0"/>
																							<Setter Property="ClickMode" Value="Hover"/>
																						</Style>
																					</Style.BasedOn>
																				</Style>
																			</RepeatButton.Style>
																			<RepeatButton.Visibility>
																				<MultiBinding ConverterParameter="0" FallbackValue="Visibility.Collapsed" UpdateSourceTrigger="Default">
																					<MultiBinding.Converter>
																						<MenuScrollingVisibilityConverter/>
																					</MultiBinding.Converter>
																					<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																				</MultiBinding>
																			</RepeatButton.Visibility>
																		</RepeatButton>
																		<RepeatButton CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="ScrollBar.LineDownCommand" Focusable="False" VerticalAlignment="Bottom">
																			<RepeatButton.Style>
																				<Style TargetType="{x:Type RepeatButton}">
																					<Setter Property="BorderThickness" Value="0,1,0,0"/>
																					<Setter Property="Template">
																						<Setter.Value>
																							<ControlTemplate TargetType="{x:Type RepeatButton}">
																								<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
																									<VisualStateManager.VisualStateGroups>
																										<VisualStateGroup x:Name="CommonStates">
																											<VisualState x:Name="Normal"/>
																											<VisualState x:Name="Pressed">
																												<Storyboard>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="{DynamicResource NormalForegroundColor}"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="{DynamicResource MenuBackgroundColor}"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentContainer">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<Thickness>1,3,1,1</Thickness>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																												</Storyboard>
																											</VisualState>
																											<VisualState x:Name="Disabled">
																												<Storyboard>
																													<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentContainer"/>
																												</Storyboard>
																											</VisualState>
																										</VisualStateGroup>
																										<VisualStateGroup x:Name="FocusStates">
																											<VisualState x:Name="Focused"/>
																											<VisualState x:Name="Unfocused"/>
																										</VisualStateGroup>
																									</VisualStateManager.VisualStateGroups>
																									<Grid x:Name="ContentContainer" Margin="1,2">
																										<Path x:Name="BackgroundIcon" Data="M0,0L3.5,3.5 7,0z" Fill="{DynamicResource MenuBackgroundBrush}" Height="4" Margin="0,2,0,0" Stretch="None" Width="7"/>
																										<Path x:Name="ForegroundIcon" Data="M0,0L3.5,3.5 7,0z" Fill="{DynamicResource NormalBackgroundBrush}" Height="4" Margin="0,1" Stretch="None" Width="7"/>
																									</Grid>
																								</Border>
																							</ControlTemplate>
																						</Setter.Value>
																					</Setter>
																					<Style.BasedOn>
																						<Style TargetType="{x:Type RepeatButton}">
																							<Setter Property="Interval" Value="50"/>
																							<Setter Property="IsTabStop" Value="False"/>
																							<Setter Property="MinWidth" Value="0"/>
																							<Setter Property="MinHeight" Value="0"/>
                                                                                            <Setter Property="Background" Value="{DynamicResource MenuBackgroundBrush}"/>
                                                                                            <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
																							<Setter Property="BorderThickness" Value="0"/>
																							<Setter Property="ClickMode" Value="Hover"/>
																						</Style>
																					</Style.BasedOn>
																				</Style>
																			</RepeatButton.Style>
																			<RepeatButton.Visibility>
																				<MultiBinding ConverterParameter="100" FallbackValue="Visibility.Collapsed" UpdateSourceTrigger="Default">
																					<MultiBinding.Converter>
																						<MenuScrollingVisibilityConverter/>
																					</MultiBinding.Converter>
																					<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																				</MultiBinding>
																			</RepeatButton.Visibility>
																		</RepeatButton>
																	</Grid>
																</ControlTemplate>
															</Setter.Value>
														</Setter>
													</Style>
												</ScrollViewer.Style>
												<Grid>
													<ItemsPresenter/>
												</Grid>
											</ScrollViewer>
										</Grid>
									</Border>
								</Grid>
							</Grid>
						</Popup>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="SubmenuItemTemplateKey">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:RadMenuItem}">
					<Grid x:Name="RootElement">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="SubMenuOpen">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Background" Storyboard.TargetName="HighlightVisual">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="{DynamicResource MenuItemSelectedBackgroundColor}" />
                                                </DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="HighlightVisual">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="{DynamicResource NormalBorderColor}" />
                                                </DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="HighlightInnerBorderVisual">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="{DynamicResource NormalBorderColor}" />
                                                </DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightVisual"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Highlighted">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightVisual"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentGrid"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="Focused"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckedStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Tick">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Icon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked"/>
								<VisualState x:Name="HideIcon">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Icon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="RoleStates">
								<VisualState x:Name="TopLevelItem">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="IconHost">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>-2,0,-7,0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="TopLevelHeader">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="IconHost">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>-2,0,-7,0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SubmenuItem"/>
								<VisualState x:Name="SubmenuHeader">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ExpandIcon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Separator"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="OrientationStates">
								<VisualState x:Name="Horizontal"/>
								<VisualState x:Name="Vertical"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ChildrenStates">
								<VisualState x:Name="HasChildren"/>
								<VisualState x:Name="NoChildren"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="HeaderStates">
								<VisualState x:Name="VisibleHeader"/>
								<VisualState x:Name="EmptyHeader">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="Icon">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>5,3,4,3</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Content">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="InputGestureTextStates">
								<VisualState x:Name="EmptyInputGestureText"/>
								<VisualState x:Name="VisibleInputGestureText">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_InputGestureText">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
						<Grid x:Name="ContentGrid" Margin="2">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
                            <Border x:Name="HighlightVisual" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="0" Grid.ColumnSpan="4" CornerRadius="0" Opacity="0">
								<Border.Background>
                                    <SolidColorBrush Color="{DynamicResource MenuItemSelectedBackgroundColor}" />
								</Border.Background>
                                <Border x:Name="HighlightInnerBorderVisual" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="0" CornerRadius="0"/>
							</Border>
							<Grid Grid.Column="0" x:Name="IconHost" Margin="-2,0,-1,0" Width="{TemplateBinding IconColumnWidth}">
								<Path x:Name="Tick" Data="M4,7.1L5.7,7.2 7.4,9.1 12,2.4 13.2,2 7.3,13.8z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Height="16" Margin="5,3,6,3" Visibility="Collapsed" Width="16"/>
								<ContentPresenter x:Name="Icon" ContentTemplate="{TemplateBinding IconTemplate}" Content="{TemplateBinding Icon}" Margin="5,3,6,3"/>
							</Grid>
							<ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							<telerik:SharedSizeContentPresenter x:Name="PART_InputGestureText" Content="{TemplateBinding InputGestureText}" Grid.Column="2" Margin="40,3,3,3" SharedSizeGroupWidth="IGTColumn" Visibility="Collapsed"/>
							<telerik:SharedSizeContentPresenter Grid.Column="3" HorizontalAlignment="Right" SharedSizeGroupWidth="ExpandIconColumn">
								<Grid x:Name="ExpandIcon" Height="19" Margin="0,0,2,0" Visibility="Collapsed" Width="16">
                                    <Path Data="M0,0L0,7 1,7 1,6 2,6 2,5 3,5 3,4 4,4 4,3 3,3 3,2 2,2 2,1 1,1 1,0z" Fill="{DynamicResource NormalForegroundBrush}" Margin="6,7,6,5"/>
                                    <Path Data="M0,0L0,7 1,7 1,6 2,6 2,5 3,5 3,4 4,4 4,3 3,3 3,2 2,2 2,1 1,1 1,0z" Fill="{DynamicResource NormalForegroundBrush}" Margin="6"/>
								</Grid>
							</telerik:SharedSizeContentPresenter>
						</Grid>
						<Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="-1" IsOpen="{TemplateBinding IsSubmenuOpen}" VerticalOffset="-1">
							<Grid Height="{TemplateBinding DropDownHeight}" Width="{TemplateBinding DropDownWidth}">
								<Grid x:Name="PopupContentElement">
                                    <Border BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="1">
										<Grid>
                                            <Border x:Name="IconSeparatorBackground" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="0,0,1,0" Background="{DynamicResource MenuBackgroundBrush}" HorizontalAlignment="Left" Width="{Binding IconColumnWidth, RelativeSource={RelativeSource TemplatedParent}}"/>
											<ScrollViewer x:Name="PART_ScrollViewer" telerik:SharedSizeScope.IsSharedSizeScope="True">
												<ScrollViewer.Style>
													<Style TargetType="{x:Type ScrollViewer}">
														<Setter Property="Padding" Value="0"/>
														<Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
														<Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
														<Setter Property="CanContentScroll" Value="True"/>
														<Setter Property="Template">
															<Setter.Value>
																<ControlTemplate TargetType="{x:Type ScrollViewer}">
																	<Grid SnapsToDevicePixels="True">
																		<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="{TemplateBinding Padding}"/>
																		<RepeatButton CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="ScrollBar.LineUpCommand" Focusable="False" VerticalAlignment="Top">
																			<RepeatButton.Style>
																				<Style TargetType="{x:Type RepeatButton}">
																					<Setter Property="BorderThickness" Value="0,0,0,1"/>
																					<Setter Property="Template">
																						<Setter.Value>
																							<ControlTemplate TargetType="{x:Type RepeatButton}">
																								<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
																									<VisualStateManager.VisualStateGroups>
																										<VisualStateGroup x:Name="CommonStates">
																											<VisualState x:Name="Normal"/>
																											<VisualState x:Name="Pressed">
																												<Storyboard>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="{DynamicResource NormalForegroundColor}" />
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
                                                                                                                                <SolidColorBrush Color="{DynamicResource MenuBackgroundColor}"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentContainer">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<Thickness>1,3,1,1</Thickness>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																												</Storyboard>
																											</VisualState>
																											<VisualState x:Name="Disabled">
																												<Storyboard>
																													<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentContainer"/>
																												</Storyboard>
																											</VisualState>
																										</VisualStateGroup>
																										<VisualStateGroup x:Name="FocusStates">
																											<VisualState x:Name="Focused"/>
																											<VisualState x:Name="Unfocused"/>
																										</VisualStateGroup>
																									</VisualStateManager.VisualStateGroups>
																									<Grid x:Name="ContentContainer" Margin="1,2">
																										<Path x:Name="BackgroundIcon" Data="M0,4L3.5,0.5 7,4z" Fill="{DynamicResource MenuBackgroundBrush}" Height="4" Margin="0,2,0,0" Stretch="None" Width="7"/>
																										<Path x:Name="ForegroundIcon" Data="M0,4L3.5,0.5 7,4z" Fill="{DynamicResource NormalBackgroundBrush}" Height="4" Margin="0,1" Stretch="None" Width="7"/>
																									</Grid>
																								</Border>
																							</ControlTemplate>
																						</Setter.Value>
																					</Setter>
																					<Style.BasedOn>
																						<Style TargetType="{x:Type RepeatButton}">
																							<Setter Property="Interval" Value="50"/>
																							<Setter Property="IsTabStop" Value="False"/>
																							<Setter Property="MinWidth" Value="0"/>
																							<Setter Property="MinHeight" Value="0"/>
                                                                                            <Setter Property="Background" Value="{DynamicResource MenuBackgroundBrush}"/>
                                                                                            <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
																							<Setter Property="BorderThickness" Value="0"/>
																							<Setter Property="ClickMode" Value="Hover"/>
																						</Style>
																					</Style.BasedOn>
																				</Style>
																			</RepeatButton.Style>
																			<RepeatButton.Visibility>
																				<MultiBinding ConverterParameter="0" FallbackValue="Visibility.Collapsed" UpdateSourceTrigger="Default">
																					<MultiBinding.Converter>
																						<MenuScrollingVisibilityConverter/>
																					</MultiBinding.Converter>
																					<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																				</MultiBinding>
																			</RepeatButton.Visibility>
																		</RepeatButton>
																		<RepeatButton CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="ScrollBar.LineDownCommand" Focusable="False" VerticalAlignment="Bottom">
																			<RepeatButton.Style>
																				<Style TargetType="{x:Type RepeatButton}">
																					<Setter Property="BorderThickness" Value="0,1,0,0"/>
																					<Setter Property="Template">
																						<Setter.Value>
																							<ControlTemplate TargetType="{x:Type RepeatButton}">
																								<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
																									<VisualStateManager.VisualStateGroups>
																										<VisualStateGroup x:Name="CommonStates">
																											<VisualState x:Name="Normal"/>
																											<VisualState x:Name="Pressed">
																												<Storyboard>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="{DynamicResource NormalForegroundColor}"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<SolidColorBrush Color="{DynamicResource MenuBackgroundColor}"/>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentContainer">
																														<DiscreteObjectKeyFrame KeyTime="0">
																															<DiscreteObjectKeyFrame.Value>
																																<Thickness>1,3,1,1</Thickness>
																															</DiscreteObjectKeyFrame.Value>
																														</DiscreteObjectKeyFrame>
																													</ObjectAnimationUsingKeyFrames>
																												</Storyboard>
																											</VisualState>
																											<VisualState x:Name="Disabled">
																												<Storyboard>
																													<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentContainer"/>
																												</Storyboard>
																											</VisualState>
																										</VisualStateGroup>
																										<VisualStateGroup x:Name="FocusStates">
																											<VisualState x:Name="Focused"/>
																											<VisualState x:Name="Unfocused"/>
																										</VisualStateGroup>
																									</VisualStateManager.VisualStateGroups>
																									<Grid x:Name="ContentContainer" Margin="1,2">
																										<Path x:Name="BackgroundIcon" Data="M0,0L3.5,3.5 7,0z" Fill="{DynamicResource MenuBackgroundBrush}" Height="4" Margin="0,2,0,0" Stretch="None" Width="7"/>
																										<Path x:Name="ForegroundIcon" Data="M0,0L3.5,3.5 7,0z" Fill="{DynamicResource NormalBackgroundBrush}" Height="4" Margin="0,1" Stretch="None" Width="7"/>
																									</Grid>
																								</Border>
																							</ControlTemplate>
																						</Setter.Value>
																					</Setter>
																					<Style.BasedOn>
																						<Style TargetType="{x:Type RepeatButton}">
																							<Setter Property="Interval" Value="50"/>
																							<Setter Property="IsTabStop" Value="False"/>
																							<Setter Property="MinWidth" Value="0"/>
																							<Setter Property="MinHeight" Value="0"/>
                                                                                            <Setter Property="Background" Value="{DynamicResource MenuBackgroundBrush}"/>
                                                                                            <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
																							<Setter Property="BorderThickness" Value="0"/>
																							<Setter Property="ClickMode" Value="Hover"/>
																						</Style>
																					</Style.BasedOn>
																				</Style>
																			</RepeatButton.Style>
																			<RepeatButton.Visibility>
																				<MultiBinding ConverterParameter="100" FallbackValue="Visibility.Collapsed" UpdateSourceTrigger="Default">
																					<MultiBinding.Converter>
																						<MenuScrollingVisibilityConverter/>
																					</MultiBinding.Converter>
																					<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																					<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
																				</MultiBinding>
																			</RepeatButton.Visibility>
																		</RepeatButton>
																	</Grid>
																</ControlTemplate>
															</Setter.Value>
														</Setter>
													</Style>
												</ScrollViewer.Style>
												<Grid>
													<ItemsPresenter/>
												</Grid>
											</ScrollViewer>
										</Grid>
									</Border>
								</Grid>
							</Grid>
						</Popup>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="SeparatorTemplateKey">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:RadMenuItem}">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="OrientationStates">
								<VisualState x:Name="VerticalState"/>
								<VisualState x:Name="HorizontalState">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="HorizontalSeparator">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="VerticalSeparator">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="HorizontalSeparator">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Grid Grid.Column="0" HorizontalAlignment="Left" Width="{TemplateBinding IconColumnWidth}"/>
							<Grid Grid.Column="1" Height="2" Margin="4,4,4,3">
                                <Rectangle Fill="{DynamicResource NormalBorderBrush}" Height="1" VerticalAlignment="Top"/>
								<Rectangle Fill="Transparent" Height="1" VerticalAlignment="Bottom"/>
							</Grid>
						</Grid>
						<Grid x:Name="VerticalSeparator" Margin="2" Visibility="Collapsed" Width="2">
                            <Rectangle Fill="{DynamicResource NormalBorderBrush}" HorizontalAlignment="Left" Width="1"/>
							<Rectangle Fill="Transparent" HorizontalAlignment="Right" Width="1"/>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
		<Style.BasedOn>
			<Style TargetType="{x:Type telerik:RadMenuItem}">
				<Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
				<Setter Property="BorderThickness" Value="0"/>
				<Setter Property="HorizontalContentAlignment" Value="Left"/>
				<Setter Property="VerticalContentAlignment" Value="Center"/>
				<Setter Property="SnapsToDevicePixels" Value="True"/>
				<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
			</Style>
		</Style.BasedOn>
		<Style.Triggers>
			<Trigger Property="Role" Value="TopLevelHeader">
				<Setter Property="Template" Value="{Binding TopLevelHeaderTemplateKey, RelativeSource={RelativeSource Self}}"/>
			</Trigger>
			<Trigger Property="Role" Value="TopLevelItem">
				<Setter Property="Template" Value="{Binding TopLevelItemTemplateKey, RelativeSource={RelativeSource Self}}"/>
			</Trigger>
			<Trigger Property="Role" Value="SubmenuHeader">
				<Setter Property="Template" Value="{Binding SubmenuHeaderTemplateKey, RelativeSource={RelativeSource Self}}"/>
			</Trigger>
			<Trigger Property="Role" Value="SubmenuItem">
				<Setter Property="Template" Value="{Binding SubmenuItemTemplateKey, RelativeSource={RelativeSource Self}}"/>
			</Trigger>
			<Trigger Property="Role" Value="Separator">
				<Setter Property="Template" Value="{Binding SeparatorTemplateKey, RelativeSource={RelativeSource Self}}"/>
			</Trigger>
		</Style.Triggers>
	</Style>
    
</ResourceDictionary>
